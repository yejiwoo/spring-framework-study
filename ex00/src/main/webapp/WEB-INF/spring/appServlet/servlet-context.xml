<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 톰캣기동 시에 해당 패키지에 @Controller, @Service, @Repository, -->
	<!-- @Component 어노테이션이 -->
	<!-- 정의된 클래스들이 DispatcherServlet 이 사용하는 컨텍스트 영역에-->
	<!-- 빈으로 생성됩니다. -->
	<!-- <context:component-scan base-package="org.zerock.ex00" /> -->
	<context:component-scan base-package="org.zerock.ex00.service" />
	<context:component-scan base-package="org.zerock.ex00.controller" />
	<!-- DAO 클래스 빈 자동 생성 -->
	<context:component-scan base-package="org.zerock.ex00.mapperDAO" />
	
	<!-- <context:component-scan base-package="practice.controller" /> -->
	
</beans:beans>
